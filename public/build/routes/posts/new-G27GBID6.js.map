{
  "version": 3,
  "sources": ["../../../../app/routes/posts/new.jsx"],
  "sourcesContent": ["import { redirect } from \"@remix-run/node\"\r\nimport { Link } from \"@remix-run/react\"\r\nimport { db } from '~/utils/db.server'\r\n\r\nexport const action = async ({request}) => {\r\n    const form = await request.formData()\r\n    const title = form.get('title')\r\n    const body = form.get('body')\r\n    \r\n    const fields = {title, body}\r\n\r\n    console.log(fields)\r\n    const post = await db.post.create({data: fields})\r\n\r\n    return redirect(`/posts/${post.id}`)\r\n}\r\n\r\nfunction NewPost() {\r\n  return (\r\n    <>\r\n        <div className=\"page-header\">\r\n            <h1>New Post</h1>\r\n            <Link to='/posts' className=\"btn btn-reverse\">\r\n                Back\r\n            </Link>\r\n        </div>\r\n        <div className=\"page-content\">\r\n            <form method=\"POST\">\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"body\">Post Body</label>\r\n                    <textarea name=\"body\" id=\"body\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-block\">\r\n                    Add Post\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPost"],
  "mappings": ";;;;;;;;;;;;;AACA;AACA,gBAAmB;AAFnB;AAiBA,SAAS,UAAU;AACjB,SACE;AAAA,IACI;AAAA,yDAAC;AAAA,QAAI,WAAU;AAAA,QACX;AAAA,6DAAC;AAAA,YAAG;AAAA,aAAJ;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA,UACZ,mDAAC;AAAA,YAAK,IAAG;AAAA,YAAS,WAAU;AAAA,YAAkB;AAAA,aAA9C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACX,6DAAC;AAAA,UAAK,QAAO;AAAA,UACT;AAAA,+DAAC;AAAA,cAAI,WAAU;AAAA,cACX;AAAA,mEAAC;AAAA,kBAAM,SAAQ;AAAA,kBAAQ;AAAA,mBAAvB;AAAA;AAAA;AAAA;AAAA,uBAA4B;AAAA,gBAC5B,mDAAC;AAAA,kBAAM,MAAK;AAAA,kBAAO,MAAK;AAAA,kBAAQ,IAAG;AAAA,mBAAnC;AAAA;AAAA;AAAA;AAAA,uBAA2C;AAAA;AAAA,eAF/C;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,mDAAC;AAAA,cAAI,WAAU;AAAA,cACX;AAAA,mEAAC;AAAA,kBAAM,SAAQ;AAAA,kBAAO;AAAA,mBAAtB;AAAA;AAAA;AAAA;AAAA,uBAA+B;AAAA,gBAC/B,mDAAC;AAAA,kBAAS,MAAK;AAAA,kBAAO,IAAG;AAAA,mBAAzB;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAAA;AAAA,eAFpC;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,mDAAC;AAAA,cAAO,MAAK;AAAA,cAAS,WAAU;AAAA,cAAgB;AAAA,eAAhD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA;AAAA,WAXJ;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,SAbJ;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA;AAAA,KArBJ;AAAA;AAAA;AAAA;AAAA,SAsBA;AAEJ;AAEA,IAAO,cAAQ;",
  "names": []
}
